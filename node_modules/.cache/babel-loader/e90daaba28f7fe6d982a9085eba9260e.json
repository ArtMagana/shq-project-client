{"ast":null,"code":"import _classCallCheck from \"/Users/arturomaganamartinez/Desktop/IronHack/Modulo 3/shq-test/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/arturomaganamartinez/Desktop/IronHack/Modulo 3/shq-test/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/arturomaganamartinez/Desktop/IronHack/Modulo 3/shq-test/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/arturomaganamartinez/Desktop/IronHack/Modulo 3/shq-test/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/arturomaganamartinez/Desktop/IronHack/Modulo 3/shq-test/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/arturomaganamartinez/Desktop/IronHack/Modulo 3/shq-test/client/src/components/products/EditProduct.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nvar EditProduct =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EditProduct, _Component);\n\n  function EditProduct(props) {\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditProduct).call(this, props));\n\n    _this.handleFormSubmit = function (event) {\n      var name = _this.state.name;\n      var specification = _this.state.specification;\n      var measure = _this.state.measure;\n      var packing = _this.state.packing;\n      event.preventDefault();\n      axios.put(\"http://localhost:5000/api/products/\".concat(_this.props.theProduct._id), {\n        name: name,\n        specification: specification,\n        measure: measure,\n        packing: packing\n      }, {\n        withCredentials: true\n      }).then(function () {\n        _this.props.getTheProduct(); // after submitting the form, redirect to '/products'\n\n\n        _this.props.history.push('/products');\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    };\n\n    _this.handleChangeName = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleChangeDesc = function (event) {\n      _this.setState({\n        specification: event.target.value\n      });\n    };\n\n    _this.handleChangeMeasure = function (event) {\n      _this.setState({\n        measure: event.target.value\n      });\n    };\n\n    _this.handleChangePacking = function (event) {\n      _this.setState({\n        packing: event.target.value\n      });\n    };\n\n    _this.state = {\n      name: _this.props.theProduct.name,\n      specification: _this.props.theProduct.specification,\n      measure: _this.props.theProduct.measure,\n      packing: _this.props.theProduct.packing\n    };\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Edit Product\"), React.createElement(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-sm-2 col-form-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Name:\"), React.createElement(\"div\", {\n        className: \"col-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"name\",\n        placeholder: \"Product name\",\n        value: this.state.name,\n        onChange: function onChange(e) {\n          return _this2.handleChangeName(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Specification:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"specification\",\n        value: this.state.specification,\n        onChange: function onChange(e) {\n          return _this2.handleChangeDesc(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Measurement:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"measure\",\n        value: this.state.measure,\n        onChange: function onChange(e) {\n          return _this2.handleChangeMeasure(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Packing:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"packing\",\n        value: this.state.packing,\n        onChange: function onChange(e) {\n          return _this2.handleChangePacking(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EditProduct;\n}(Component);\n\nexport default EditProduct; // import React, { Component } from 'react';\n// import axios from 'axios';\n// class EditProduct extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//         name: this.props.theProduct.name,\n//         specification: this.props.theProduct.specification,\n//         measure: this.props.theProduct.measure,\n//         presentation: this.props.theProduct.presentation,\n//         packing: this.props.theProduct.packing,\n//         dimensions: this.props.theProduct.dimensions,\n//         currency: this.props.theProduct.currency,\n//         iva: this.props.theProduct.iva,\n//         igi: this.props.theProduct.igi\n//     }\n//   }\n//   handleFormSubmit = (event) => {\n//     const name = this.state.name;\n//     const specification = this.state.specification;\n//     const measure = this.state.measure;\n//     const presentation = this.state.presentation;\n//     const packing = this.state.packing;\n//     const dimensions = this.state.dimensions;\n//     const currency = this.state.currency;\n//     const iva = this.state.iva;\n//     const igi = this.state.igi;\n//     event.preventDefault();\n//     axios.put(`http://localhost:5000/api/products/${this.props.theProduct._id}`, {\n//       name,\n//       specification,\n//       measure,\n//       presentation,\n//       packing,\n//       dimensions,\n//       currency,\n//       iva,\n//       igi,\n//     }, {withCredentials:true})\n//     .then( () => {\n//         this.props.getTheProduct();\n//         // after submitting the form, redirect to '/products'\n//         this.props.history.push('/products');\n//     })\n//     .catch( error => console.log(error) )\n//   }\n//   handleChangeName = (event) => {\n//     this.setState({\n//       name:event.target.value\n//     })\n//   }\n//   handleChangeSpec = (event) => {\n//     this.setState({\n//       specification:event.target.value\n//     })\n//   }\n//   handleChangeMeasure = (event) => {\n//     this.setState({\n//       measure:event.target.value\n//     })\n//   }\n//   handleChangePres = (event) => {\n//     this.setState({\n//       presentation:event.target.value\n//     })\n//   }\n//   handleChangePack = (event) => {\n//     this.setState({\n//       packing:event.target.value\n//     })\n//   }\n//   handleChangeDim = (event) => {\n//     this.setState({\n//       dimensions:event.target.value\n//     })\n//   }\n//   handleChangeCurr = (event) => {\n//     this.setState({\n//       currency:event.target.value\n//     })\n//   }\n//   handleChangeIVA = (event) => {\n//     this.setState({\n//       iva:event.target.value\n//     })\n//   }\n//   handleChangeIGI = (event) => {\n//     this.setState({\n//       igi:event.target.value\n//     })\n//   }\n//   render(){\n//     return (\n//       <div>\n//         <hr />\n//         <h3>Edit product information</h3>\n//         <div className='container'>\n//           <form>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Name:</label>\n//               <div className='col-sm-4'>\n//                 <input type='text' className='form-control' name='name' placeholder='Product name' value={this.state.name} onChange={e => this.handleChangeName(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Specification:</label>\n//               <div className='col-sm-6'>\n//                 <input type='text' className='form-control' name='specification' placeholder='Product Description' value={this.state.specification} onChange={e => this.handleChangeSpec(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Measure:</label>\n//               <div className='col-sm-2'>\n//                 <input type='text' className='form-control' name='measure' placeholder='Unit (u)' value={this.state.measure} onChange={e => this.handleChangeMeasure(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Package:</label>\n//               <div className='col-sm-2'>\n//                 <input type='text' className='form-control' name='packing' placeholder='Pack (p)' value={this.state.packing} onChange={e => this.handleChangePack(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Presentation:</label>\n//               <div className='col-sm-2'>\n//                 <input type='number' className='form-control' name='presentation' placeholder='u / p' value={this.state.presentation} onChange={e => this.handleChangePres(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Dimensions:</label>\n//               <div className='col-sm-2'>\n//                 <input type='number' className='form-control' name='dimensions' placeholder='cm3' value={this.state.dimensions} onChange={e => this.handleChangeDim(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Currency:</label>\n//               <div className='col-sm-2'>\n//                 <input type='text' className='form-control' name='currency' placeholder='Currency' value={this.state.currency} onChange={e => this.handleChangeCurr(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>IVA:</label>\n//               <div className='col-sm-2'>\n//                 <input type='number' className='form-control' name='iva' placeholder='IVA' value={this.state.iva} onChange={e => this.handleChangeIVA(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>IGI:</label>\n//               <div className='col-sm-2'>\n//                 <input type='number' className='form-control' name='igi' placeholder='IGI' value={this.state.igi} onChange={e => this.handleChangeIGI(e)}/>\n//               </div>   \n//             </div>\n//             <input type=\"submit\" className='btn btn-primary' value=\"Edit\" />\n//           </form>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n// export default EditProduct;","map":{"version":3,"sources":["/Users/arturomaganamartinez/Desktop/IronHack/Modulo 3/shq-test/client/src/components/products/EditProduct.js"],"names":["React","Component","axios","EditProduct","props","handleFormSubmit","event","name","state","specification","measure","packing","preventDefault","put","theProduct","_id","withCredentials","then","getTheProduct","history","push","catch","error","console","log","handleChangeName","setState","target","value","handleChangeDesc","handleChangeMeasure","handleChangePacking","e"],"mappings":"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":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass EditProduct extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        name: this.props.theProduct.name,\n        specification: this.props.theProduct.specification,\n        measure: this.props.theProduct.measure,\n        packing: this.props.theProduct.packing\n    }\n  }\n\n\n  handleFormSubmit = (event) => {\n    const name = this.state.name;\n    const specification = this.state.specification;\n    const measure = this.state.measure;\n    const packing = this.state.packing;\n\n    event.preventDefault();\n\n    axios.put(`http://localhost:5000/api/products/${this.props.theProduct._id}`, {\n      name,\n      specification,\n      measure,\n      packing\n    }, {withCredentials:true})\n    .then( () => {\n        this.props.getTheProduct();\n        // after submitting the form, redirect to '/products'\n        this.props.history.push('/products');\n    })\n    .catch( error => console.log(error) )\n  }\n\n  handleChangeName = (event) => {\n    this.setState({\n      name:event.target.value\n    })\n  }\n\n  handleChangeDesc = (event) => {\n    this.setState({\n      specification:event.target.value\n    })\n  }\n  handleChangeMeasure = (event) => {\n    this.setState({\n      measure:event.target.value\n    })\n  }\n  handleChangePacking = (event) => {\n    this.setState({\n      packing:event.target.value\n    })\n  }\n  render(){\n    return (\n      <div>\n        <hr />\n        <h3>Edit Product</h3>        \n        <form onSubmit={this.handleFormSubmit}>\n          <div className='form-group row'>\n          <label className='col-sm-2 col-form-label'>Name:</label>\n          <div className='col-sm-4'>\n          <input type='text' className='form-control' name='name' placeholder='Product name' value={this.state.name} onChange={e => this.handleChangeName(e)}/>\n          </div>\n          </div>\n\n          <label>Specification:</label>\n          <input type='text' name='specification' value={this.state.specification} onChange={e => this.handleChangeDesc(e)} />\n          <label>Measurement:</label>\n          <input type='text' name='measure' value={this.state.measure} onChange={e => this.handleChangeMeasure(e)} />\n          <label>Packing:</label>\n          <input type='text' name='packing' value={this.state.packing} onChange={e => this.handleChangePacking(e)} />\n\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditProduct;\n\n\n\n\n// import React, { Component } from 'react';\n// import axios from 'axios';\n\n// class EditProduct extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//         name: this.props.theProduct.name,\n//         specification: this.props.theProduct.specification,\n//         measure: this.props.theProduct.measure,\n//         presentation: this.props.theProduct.presentation,\n//         packing: this.props.theProduct.packing,\n//         dimensions: this.props.theProduct.dimensions,\n//         currency: this.props.theProduct.currency,\n//         iva: this.props.theProduct.iva,\n//         igi: this.props.theProduct.igi\n//     }\n//   }\n\n\n//   handleFormSubmit = (event) => {\n//     const name = this.state.name;\n//     const specification = this.state.specification;\n//     const measure = this.state.measure;\n//     const presentation = this.state.presentation;\n//     const packing = this.state.packing;\n//     const dimensions = this.state.dimensions;\n//     const currency = this.state.currency;\n//     const iva = this.state.iva;\n//     const igi = this.state.igi;\n\n//     event.preventDefault();\n\n//     axios.put(`http://localhost:5000/api/products/${this.props.theProduct._id}`, {\n//       name,\n//       specification,\n//       measure,\n//       presentation,\n//       packing,\n//       dimensions,\n//       currency,\n//       iva,\n//       igi,\n//     }, {withCredentials:true})\n//     .then( () => {\n//         this.props.getTheProduct();\n//         // after submitting the form, redirect to '/products'\n//         this.props.history.push('/products');\n//     })\n//     .catch( error => console.log(error) )\n//   }\n\n//   handleChangeName = (event) => {\n//     this.setState({\n//       name:event.target.value\n//     })\n//   }\n//   handleChangeSpec = (event) => {\n//     this.setState({\n//       specification:event.target.value\n//     })\n//   }\n//   handleChangeMeasure = (event) => {\n//     this.setState({\n//       measure:event.target.value\n//     })\n//   }\n//   handleChangePres = (event) => {\n//     this.setState({\n//       presentation:event.target.value\n//     })\n//   }\n//   handleChangePack = (event) => {\n//     this.setState({\n//       packing:event.target.value\n//     })\n//   }\n//   handleChangeDim = (event) => {\n//     this.setState({\n//       dimensions:event.target.value\n//     })\n//   }\n//   handleChangeCurr = (event) => {\n//     this.setState({\n//       currency:event.target.value\n//     })\n//   }\n//   handleChangeIVA = (event) => {\n//     this.setState({\n//       iva:event.target.value\n//     })\n//   }\n//   handleChangeIGI = (event) => {\n//     this.setState({\n//       igi:event.target.value\n//     })\n//   }\n\n\n//   render(){\n//     return (\n//       <div>\n//         <hr />\n//         <h3>Edit product information</h3>\n//         <div className='container'>\n//           <form>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Name:</label>\n//               <div className='col-sm-4'>\n//                 <input type='text' className='form-control' name='name' placeholder='Product name' value={this.state.name} onChange={e => this.handleChangeName(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Specification:</label>\n//               <div className='col-sm-6'>\n//                 <input type='text' className='form-control' name='specification' placeholder='Product Description' value={this.state.specification} onChange={e => this.handleChangeSpec(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Measure:</label>\n//               <div className='col-sm-2'>\n//                 <input type='text' className='form-control' name='measure' placeholder='Unit (u)' value={this.state.measure} onChange={e => this.handleChangeMeasure(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Package:</label>\n//               <div className='col-sm-2'>\n//                 <input type='text' className='form-control' name='packing' placeholder='Pack (p)' value={this.state.packing} onChange={e => this.handleChangePack(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Presentation:</label>\n//               <div className='col-sm-2'>\n//                 <input type='number' className='form-control' name='presentation' placeholder='u / p' value={this.state.presentation} onChange={e => this.handleChangePres(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Dimensions:</label>\n//               <div className='col-sm-2'>\n//                 <input type='number' className='form-control' name='dimensions' placeholder='cm3' value={this.state.dimensions} onChange={e => this.handleChangeDim(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>Currency:</label>\n//               <div className='col-sm-2'>\n//                 <input type='text' className='form-control' name='currency' placeholder='Currency' value={this.state.currency} onChange={e => this.handleChangeCurr(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>IVA:</label>\n//               <div className='col-sm-2'>\n//                 <input type='number' className='form-control' name='iva' placeholder='IVA' value={this.state.iva} onChange={e => this.handleChangeIVA(e)}/>\n//               </div>   \n//             </div>\n//             <div className='form-group row'>\n//               <label className='col-sm-2 col-form-label'>IGI:</label>\n//               <div className='col-sm-2'>\n//                 <input type='number' className='form-control' name='igi' placeholder='IGI' value={this.state.igi} onChange={e => this.handleChangeIGI(e)}/>\n//               </div>   \n//             </div>\n\n//             <input type=\"submit\" className='btn btn-primary' value=\"Edit\" />\n//           </form>\n//         </div>\n//       </div>\n//     )\n//   }\n// }\n\n// export default EditProduct;\n"]},"metadata":{},"sourceType":"module"}